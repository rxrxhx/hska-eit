
// Verilog netlist produced by program ldbanno, Version Diamond (64-bit) 3.1.0.96
// ldbanno -n Verilog -o TEST_TEST_mapvo.vo -w -neg -gui TEST_TEST_map.ncd 
// Netlist created on Fri May 11 01:07:54 2018
// Netlist written on Fri May 11 01:07:58 2018
// Design is for device LCMXO2-256HC
// Design is for package TQFP100
// Design is for performance grade 4

`timescale 1 ns / 1 ps

module mult ( A, B, Z );
  input  [2:0] A;
  input  [2:0] B;
  output [3:0] Z;
  wire   mult_3s_3s_0_cin_lr_0, mult_3s_3s_0_pp_1_4, mult_3s_3s_0_pp_0_4, 
         mult_3s_3s_0_pp_1_3, mult_3s_3s_0_pp_0_3, co_t_mult_3s_3s_0_0_1, R_3, 
         R_4, co_t_mult_3s_3s_0_0_2, mult_3s_3s_0_pp_1_2, mult_3s_3s_0_pp_0_2, 
         R_2, R_5, VCC_net, mult_3s_3s_0_mult_0_0_n3, B_c_1, A_c_1, B_c_0, 
         A_c_0, R_1, mco, mult_3s_3s_0_mult_0_1_n0, n30, R_0, n5, n144, Z_c, 
         n145, n146, B_c_2, A_c_2, VCCI;

  SLICE_0 SLICE_0( .FCO(mult_3s_3s_0_cin_lr_0));
  SLICE_1 SLICE_1( .B1(mult_3s_3s_0_pp_1_4), .A1(mult_3s_3s_0_pp_0_4), 
    .B0(mult_3s_3s_0_pp_1_3), .A0(mult_3s_3s_0_pp_0_3), 
    .FCI(co_t_mult_3s_3s_0_0_1), .F0(R_3), .F1(R_4), 
    .FCO(co_t_mult_3s_3s_0_0_2));
  SLICE_2 SLICE_2( .B1(mult_3s_3s_0_pp_1_2), .A1(mult_3s_3s_0_pp_0_2), 
    .F1(R_2), .FCO(co_t_mult_3s_3s_0_0_1));
  SLICE_3 SLICE_3( .FCI(co_t_mult_3s_3s_0_0_2), .F0(R_5));
  SLICE_4 SLICE_4( .D1(VCC_net), .C1(mult_3s_3s_0_mult_0_0_n3), .B1(B_c_1), 
    .A1(A_c_1), .D0(B_c_0), .C0(A_c_1), .B0(B_c_1), .A0(A_c_0), 
    .FCI(mult_3s_3s_0_cin_lr_0), .F0(R_1), .F1(mult_3s_3s_0_pp_0_2), .FCO(mco));
  SLICE_5 SLICE_5( .D1(B_c_0), .B1(B_c_1), .D0(VCC_net), .C0(VCC_net), 
    .B0(VCC_net), .A0(mult_3s_3s_0_mult_0_1_n0), .FCI(mco), 
    .F0(mult_3s_3s_0_pp_0_3), .F1(mult_3s_3s_0_pp_0_4));
  SLICE_6 SLICE_6( .D1(n30), .C1(R_0), .B1(R_5), .A1(n5), .B0(R_2), .A0(R_1), 
    .F0(n5), .F1(n144));
  SLICE_7 SLICE_7( .B1(B_c_0), .A1(A_c_0), .D0(R_3), .C0(R_5), .B0(R_4), 
    .A0(R_0), .F0(Z_c), .F1(R_0));
  SLICE_8 SLICE_8( .D1(R_3), .C1(R_5), .B1(R_4), .A1(R_1), .D0(R_3), .C0(R_4), 
    .B0(R_5), .A0(R_2), .F0(n145), .F1(n146));
  SLICE_9 SLICE_9( .B1(B_c_2), .A1(A_c_1), .B0(B_c_2), .A0(A_c_2), 
    .F0(mult_3s_3s_0_pp_1_4), .F1(mult_3s_3s_0_pp_1_3));
  SLICE_10 SLICE_10( .B1(B_c_0), .A1(A_c_2), .B0(B_c_1), .A0(A_c_2), 
    .F0(mult_3s_3s_0_mult_0_1_n0), .F1(mult_3s_3s_0_mult_0_0_n3));
  SLICE_11 SLICE_11( .B0(R_4), .A0(R_3), .F0(n30), .F1(VCC_net));
  SLICE_12 SLICE_12( .B0(B_c_2), .A0(A_c_0), .F0(mult_3s_3s_0_pp_1_2));
  Z_2_ \Z[2]_I ( .PADDO(n145), .Z2(Z[2]));
  Z_3_ \Z[3]_I ( .PADDO(n144), .Z3(Z[3]));
  Z_1_ \Z[1]_I ( .PADDO(n146), .Z1(Z[1]));
  Z_0_ \Z[0]_I ( .PADDO(Z_c), .Z0(Z[0]));
  A_2_ \A[2]_I ( .PADDI(A_c_2), .A2(A[2]));
  A_1_ \A[1]_I ( .PADDI(A_c_1), .A1(A[1]));
  A_0_ \A[0]_I ( .PADDI(A_c_0), .A0(A[0]));
  B_2_ \B[2]_I ( .PADDI(B_c_2), .B2(B[2]));
  B_1_ \B[1]_I ( .PADDI(B_c_1), .B1(B[1]));
  B_0_ \B[0]_I ( .PADDI(B_c_0), .B0(B[0]));
  VHI VHI_INST( .Z(VCCI));
  PUR PUR_INST( .PUR(VCC_net));
  GSR GSR_INST( .GSR(VCCI));
endmodule

module SLICE_0 ( output FCO );
  wire   GNDI;

  alu2_mult mult_3s_3s_0_cin_lr_add_0( .A0(GNDI), .A1(GNDI), .B0(GNDI), 
    .B1(GNDI), .CI(), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
  endspecify

endmodule

module alu2_mult ( input A0, A1, B0, B1, CI, output S0, S1, CO1 );

  FADD2B INST01( .A0(A0), .A1(A1), .B0(B0), .B1(B1), .CI(CI), .COUT(CO1), 
    .S0(S0), .S1(S1));
endmodule

module gnd ( output PWR0 );

  VLO INST1( .Z(PWR0));
endmodule

module SLICE_1 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );

  alu2_mult t_mult_3s_3s_0_add_0_2( .A0(A0), .A1(A1), .B0(B0), .B1(B1), 
    .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_2 ( input B1, A1, output F1, FCO );
  wire   GNDI;

  alu2_mult Cadd_t_mult_3s_3s_0_0_1( .A0(GNDI), .A1(A1), .B0(GNDI), .B1(B1), 
    .CI(), .S0(), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_3 ( input FCI, output F0 );
  wire   GNDI, VCCI;

  alu2_mult t_mult_3s_3s_0_add_0_3( .A0(GNDI), .A1(GNDI), .B0(VCCI), .B1(GNDI), 
    .CI(FCI), .S0(F0), .S1(), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (FCI => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module vcc ( output PWR1 );

  VHI INST1( .Z(PWR1));
endmodule

module SLICE_4 ( input D1, C1, B1, A1, D0, C0, B0, A0, FCI, output F0, F1, FCO );

  alu2_mult0001 mult_3s_3s_0_mult_0_0( .A0(A0), .A1(A1), .C0(C0), .C1(C1), 
    .B0(B0), .B1(B1), .D0(D0), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module alu2_mult0001 ( input A0, A1, C0, C1, B0, B1, D0, D1, CI, output S0, S1, 
    CO1 );

  MULT2 INST01( .A0(A0), .A1(C0), .A2(A1), .A3(C1), .B0(B0), .B1(D0), .B2(B1), 
    .B3(D1), .CI(CI), .P0(S0), .P1(S1), .CO(CO1));
endmodule

module SLICE_5 ( input D1, B1, D0, C0, B0, A0, FCI, output F0, F1 );
  wire   GNDI;

  alu2_mult0001 mult_3s_3s_0_mult_0_1( .A0(A0), .A1(GNDI), .C0(C0), .C1(GNDI), 
    .B0(B0), .B1(B1), .D0(D0), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_6 ( input D1, C1, B1, A1, B0, A0, output F0, F1 );
  wire   GNDI;

  lut4 i1_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40002 i1_2_lut( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut4 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hCCC8) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40002 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hEEEE) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_7 ( input B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40003 AND2_t5( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40004 R_0__bdd_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40003 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h8888) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40004 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h8F0E) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_8 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40004 R_1__bdd_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40005 R_2__bdd_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40005 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hB332) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_9 ( input B1, A1, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40006 ND2_t1( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40003 AND2_t0( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40006 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h7777) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_10 ( input B1, A1, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40006 ND2_t4( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40006 ND2_t3( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_11 ( input B0, A0, output F0, F1 );
  wire   GNDI;

  lut40007 i2( .A(GNDI), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40002 i1_2_lut_adj_1( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40007 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFFFF) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_12 ( input B0, A0, output F0 );
  wire   GNDI;

  lut40006 ND2_t2( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module Z_2_ ( input PADDO, output Z2 );
  wire   GNDI;

  xo2iobuf Z_pad_2( .I(PADDO), .T(GNDI), .PAD(Z2));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => Z2) = (0:0:0,0:0:0);
  endspecify

endmodule

module xo2iobuf ( input I, T, output PAD );

  OBZPD INST5( .I(I), .T(T), .O(PAD));
endmodule

module Z_3_ ( input PADDO, output Z3 );
  wire   GNDI;

  xo2iobuf Z_pad_3( .I(PADDO), .T(GNDI), .PAD(Z3));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => Z3) = (0:0:0,0:0:0);
  endspecify

endmodule

module Z_1_ ( input PADDO, output Z1 );
  wire   GNDI;

  xo2iobuf Z_pad_1( .I(PADDO), .T(GNDI), .PAD(Z1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => Z1) = (0:0:0,0:0:0);
  endspecify

endmodule

module Z_0_ ( input PADDO, output Z0 );
  wire   GNDI;

  xo2iobuf Z_pad_0( .I(PADDO), .T(GNDI), .PAD(Z0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => Z0) = (0:0:0,0:0:0);
  endspecify

endmodule

module A_2_ ( output PADDI, input A2 );

  xo2iobuf0008 A_pad_2( .Z(PADDI), .PAD(A2));

  specify
    (A2 => PADDI) = (0:0:0,0:0:0);
    $width (posedge A2, 0:0:0);
    $width (negedge A2, 0:0:0);
  endspecify

endmodule

module xo2iobuf0008 ( output Z, input PAD );

  IBPD INST1( .I(PAD), .O(Z));
endmodule

module A_1_ ( output PADDI, input A1 );

  xo2iobuf0008 A_pad_1( .Z(PADDI), .PAD(A1));

  specify
    (A1 => PADDI) = (0:0:0,0:0:0);
    $width (posedge A1, 0:0:0);
    $width (negedge A1, 0:0:0);
  endspecify

endmodule

module A_0_ ( output PADDI, input A0 );

  xo2iobuf0008 A_pad_0( .Z(PADDI), .PAD(A0));

  specify
    (A0 => PADDI) = (0:0:0,0:0:0);
    $width (posedge A0, 0:0:0);
    $width (negedge A0, 0:0:0);
  endspecify

endmodule

module B_2_ ( output PADDI, input B2 );

  xo2iobuf0008 B_pad_2( .Z(PADDI), .PAD(B2));

  specify
    (B2 => PADDI) = (0:0:0,0:0:0);
    $width (posedge B2, 0:0:0);
    $width (negedge B2, 0:0:0);
  endspecify

endmodule

module B_1_ ( output PADDI, input B1 );

  xo2iobuf0008 B_pad_1( .Z(PADDI), .PAD(B1));

  specify
    (B1 => PADDI) = (0:0:0,0:0:0);
    $width (posedge B1, 0:0:0);
    $width (negedge B1, 0:0:0);
  endspecify

endmodule

module B_0_ ( output PADDI, input B0 );

  xo2iobuf0008 B_pad_0( .Z(PADDI), .PAD(B0));

  specify
    (B0 => PADDI) = (0:0:0,0:0:0);
    $width (posedge B0, 0:0:0);
    $width (negedge B0, 0:0:0);
  endspecify

endmodule
